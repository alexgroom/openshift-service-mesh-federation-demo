kind: ServiceMeshPeer
apiVersion: federation.maistra.io/v1
metadata:
 name: {{ index .Values "remote-mesh-name" }}
 namespace: {{ index .Values "local-mesh-ctl-plane-namespace" }}
spec:
 remote:
   addresses:
   {{- if eq (index .Values "local-and-remote-connectivity-method") "ClusterIP" }}
     - {{ index .Values "local-mesh-name"}}-ingress.{{ index .Values "remote-mesh-ctl-plane-namespace"}}.svc.cluster.local
   discoveryPort: 8188
   servicePort: 15443
   {{- else if eq (index .Values "local-and-remote-connectivity-method") "NodePort" }}
     {{- range index .Values "remote-mesh-peering-addresses" }}
     - {{ . | quote }}
     {{- end }}
   discoveryPort: {{ index .Values "remote-mesh-ingress-gateway-nodeport-https-discovery-port-number" }}
   servicePort: {{ index .Values "remote-mesh-ingress-gateway-nodeport-tls-port-number" }}
   {{- else if eq (index .Values "local-and-remote-connectivity-method") "LoadBalancer" }}
     - "will-be-replaced-by-run-shell-script"
   discoveryPort: 8188
   servicePort: 15443
   {{- end }}
 gateways:
   ingress:
     name: {{ index .Values "remote-mesh-name" }}-ingress
   egress:
     name: {{ index .Values "remote-mesh-name" }}-egress
 security:
   trustDomain: {{ index .Values "remote-mesh-name" }}.local
   clientID: {{ index .Values "remote-mesh-name" }}.local/ns/{{ index .Values "remote-mesh-ctl-plane-namespace" }}/sa/{{ index .Values "local-mesh-name" }}-egress-service-account
   certificateChain:
     kind: ConfigMap
     name: {{ index .Values "remote-mesh-root-cert-configmap-name" }}